trigger:
  - main  # Runs when code is pushed to main branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  AWS_REGION: 'us-east-1'  # Change to your AWS region
  ECR_REPOSITORY: 'go-app'  # ECR repo name
  EKS_CLUSTER: 'go-eks-cluster'  # EKS cluster name
  IMAGE_TAG: '$(Build.BuildId)'  # Unique image tag
  DEPLOYMENT_MANIFEST: 'k8s/deployment.yaml'  # Path to Kubernetes manifest file

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: Build
        displayName: 'Build and Push Docker Image to ECR'
        steps:
          - checkout: self  # Fetch the latest code

          - task: Bash@3
            displayName: 'Authenticate with AWS ECR'
            inputs:
              targetType: 'inline'
              script: |
                aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              command: 'build'
              dockerfile: 'Dockerfile'
              buildContext: '.'
              tags: |
                $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY):$(IMAGE_TAG)
                $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY):latest

          - task: Docker@2
            displayName: 'Push Docker Image to ECR'
            inputs:
              command: 'push'
              repository: '$(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY)'
              tags: |
                $(IMAGE_TAG)
                latest

  - stage: DeployToEKS
    displayName: 'Deploy to EKS'
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy
        displayName: 'Deploy Application to EKS'
        steps:
          - task: Bash@3
            displayName: 'Update Kubeconfig'
            inputs:
              targetType: 'inline'
              script: |
                aws eks update-kubeconfig --region $(AWS_REGION) --name $(EKS_CLUSTER)

          - task: Bash@3
            displayName: 'Deploy to EKS'
            inputs:
              targetType: 'inline'
              script: |
                sed -i "s|<IMAGE>|$(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY):$(IMAGE_TAG)|g" $(DEPLOYMENT_MANIFEST)
                kubectl apply -f $(DEPLOYMENT_MANIFEST)
                kubectl rollout status deployment/my-app -n default

